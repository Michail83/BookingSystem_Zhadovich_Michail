// <auto-generated />
using System;
using BookingSystem.DataLayer.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingSystem.DataLayer.Migrations
{
    [DbContext(typeof(BookingSystemDBContext))]
    [Migration("20220729150125_addMoreEventforSeed")]
    partial class addMoreEventforSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.ArtEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfTickets")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArtEvents");
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.OrderAndArtEvent", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ArtEventId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBookedTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("OrderId", "ArtEventId");

                    b.HasIndex("ArtEventId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderAndArtEvents");
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.ClassicMusic", b =>
                {
                    b.HasBaseType("BookingSystem.DataLayer.EntityModels.ArtEvent");

                    b.Property<string>("ConcertName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voice")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ClassicMusics");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            AmountOfTickets = 200,
                            Date = new DateTime(2022, 7, 23, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake classic musik  1",
                            Latitude = 53.91486434449279m,
                            Longitude = 27.584181354972173m,
                            Place = "Беларусь, Минск, проспект Независимости, 50",
                            ConcertName = "classic musik  1",
                            Voice = "tenor"
                        },
                        new
                        {
                            Id = 5,
                            AmountOfTickets = 250,
                            Date = new DateTime(2022, 8, 14, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake classic musik  2",
                            Latitude = 53.91486434449279m,
                            Longitude = 27.584181354972173m,
                            Place = "Беларусь, Минск, проспект Независимости, 50",
                            ConcertName = "classic musik  2",
                            Voice = "bas"
                        });
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.OpenAir", b =>
                {
                    b.HasBaseType("BookingSystem.DataLayer.EntityModels.ArtEvent");

                    b.Property<string>("HeadLiner")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("OpenAirs");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AmountOfTickets = 1500,
                            Date = new DateTime(2022, 12, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake Gorky Party",
                            Latitude = 53.90222207800099m,
                            Longitude = 27.57284678552759m,
                            Place = "Беларусь, Минск, Первомайская улица, 3А",
                            HeadLiner = "The Best Headliner"
                        },
                        new
                        {
                            Id = 2,
                            AmountOfTickets = 100,
                            Date = new DateTime(2022, 7, 25, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake Avia Party",
                            Latitude = 53.96147426906447m,
                            Longitude = 27.65091340326826m,
                            Place = "Беларусь, Минский район, Боровлянский сельсовет, деревня Копище",
                            HeadLiner = "The Best Headliner2"
                        },
                        new
                        {
                            Id = 7,
                            AmountOfTickets = 1997,
                            Date = new DateTime(2022, 11, 24, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 7 ",
                            Latitude = 53.90168316m,
                            Longitude = 27.57247554m,
                            Place = "Беларусь, Минск, место 7",
                            HeadLiner = "Headliner - 7 "
                        },
                        new
                        {
                            Id = 8,
                            AmountOfTickets = 1195,
                            Date = new DateTime(2022, 11, 14, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 8 ",
                            Latitude = 53.90177102m,
                            Longitude = 27.57019996m,
                            Place = "Беларусь, Минск, место 8",
                            HeadLiner = "Headliner - 8 "
                        },
                        new
                        {
                            Id = 9,
                            AmountOfTickets = 63,
                            Date = new DateTime(2022, 11, 8, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 9 ",
                            Latitude = 53.90153288m,
                            Longitude = 27.57091798m,
                            Place = "Беларусь, Минск, место 9",
                            HeadLiner = "Headliner - 9 "
                        },
                        new
                        {
                            Id = 10,
                            AmountOfTickets = 803,
                            Date = new DateTime(2022, 9, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 10 ",
                            Latitude = 53.9018009m,
                            Longitude = 27.57071005m,
                            Place = "Беларусь, Минск, место 10",
                            HeadLiner = "Headliner - 10 "
                        },
                        new
                        {
                            Id = 11,
                            AmountOfTickets = 1655,
                            Date = new DateTime(2022, 9, 24, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 11 ",
                            Latitude = 53.90010477m,
                            Longitude = 27.57260271m,
                            Place = "Беларусь, Минск, место 11",
                            HeadLiner = "Headliner - 11 "
                        },
                        new
                        {
                            Id = 12,
                            AmountOfTickets = 693,
                            Date = new DateTime(2022, 9, 2, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 12 ",
                            Latitude = 53.90194404m,
                            Longitude = 27.5712736m,
                            Place = "Беларусь, Минск, место 12",
                            HeadLiner = "Headliner - 12 "
                        },
                        new
                        {
                            Id = 13,
                            AmountOfTickets = 346,
                            Date = new DateTime(2022, 10, 25, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 13 ",
                            Latitude = 53.90053316m,
                            Longitude = 27.57060408m,
                            Place = "Беларусь, Минск, место 13",
                            HeadLiner = "Headliner - 13 "
                        },
                        new
                        {
                            Id = 14,
                            AmountOfTickets = 1471,
                            Date = new DateTime(2022, 11, 17, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 14 ",
                            Latitude = 53.90112879m,
                            Longitude = 27.57279098m,
                            Place = "Беларусь, Минск, место 14",
                            HeadLiner = "Headliner - 14 "
                        },
                        new
                        {
                            Id = 15,
                            AmountOfTickets = 1444,
                            Date = new DateTime(2022, 8, 6, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 15 ",
                            Latitude = 53.90170307m,
                            Longitude = 27.57023575m,
                            Place = "Беларусь, Минск, место 15",
                            HeadLiner = "Headliner - 15 "
                        },
                        new
                        {
                            Id = 16,
                            AmountOfTickets = 468,
                            Date = new DateTime(2022, 9, 6, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 16 ",
                            Latitude = 53.90023174m,
                            Longitude = 27.57132156m,
                            Place = "Беларусь, Минск, место 16",
                            HeadLiner = "Headliner - 16 "
                        },
                        new
                        {
                            Id = 17,
                            AmountOfTickets = 132,
                            Date = new DateTime(2022, 11, 24, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 17 ",
                            Latitude = 53.90129156m,
                            Longitude = 27.57118122m,
                            Place = "Беларусь, Минск, место 17",
                            HeadLiner = "Headliner - 17 "
                        },
                        new
                        {
                            Id = 18,
                            AmountOfTickets = 16,
                            Date = new DateTime(2022, 8, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 18 ",
                            Latitude = 53.90128219m,
                            Longitude = 27.57000988m,
                            Place = "Беларусь, Минск, место 18",
                            HeadLiner = "Headliner - 18 "
                        },
                        new
                        {
                            Id = 19,
                            AmountOfTickets = 934,
                            Date = new DateTime(2022, 10, 6, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 19 ",
                            Latitude = 53.90173609m,
                            Longitude = 27.57259745m,
                            Place = "Беларусь, Минск, место 19",
                            HeadLiner = "Headliner - 19 "
                        },
                        new
                        {
                            Id = 20,
                            AmountOfTickets = 1382,
                            Date = new DateTime(2022, 9, 23, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 20 ",
                            Latitude = 53.9020009m,
                            Longitude = 27.57266559m,
                            Place = "Беларусь, Минск, место 20",
                            HeadLiner = "Headliner - 20 "
                        },
                        new
                        {
                            Id = 21,
                            AmountOfTickets = 1463,
                            Date = new DateTime(2022, 9, 18, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 21 ",
                            Latitude = 53.90147207m,
                            Longitude = 27.57110328m,
                            Place = "Беларусь, Минск, место 21",
                            HeadLiner = "Headliner - 21 "
                        },
                        new
                        {
                            Id = 22,
                            AmountOfTickets = 542,
                            Date = new DateTime(2022, 10, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 22 ",
                            Latitude = 53.90152881m,
                            Longitude = 27.57074823m,
                            Place = "Беларусь, Минск, место 22",
                            HeadLiner = "Headliner - 22 "
                        },
                        new
                        {
                            Id = 23,
                            AmountOfTickets = 819,
                            Date = new DateTime(2022, 8, 10, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 23 ",
                            Latitude = 53.90101991m,
                            Longitude = 27.57105763m,
                            Place = "Беларусь, Минск, место 23",
                            HeadLiner = "Headliner - 23 "
                        },
                        new
                        {
                            Id = 24,
                            AmountOfTickets = 1850,
                            Date = new DateTime(2022, 11, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 24 ",
                            Latitude = 53.90099403m,
                            Longitude = 27.57032045m,
                            Place = "Беларусь, Минск, место 24",
                            HeadLiner = "Headliner - 24 "
                        },
                        new
                        {
                            Id = 25,
                            AmountOfTickets = 1758,
                            Date = new DateTime(2022, 10, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 25 ",
                            Latitude = 53.90197521m,
                            Longitude = 27.57210964m,
                            Place = "Беларусь, Минск, место 25",
                            HeadLiner = "Headliner - 25 "
                        },
                        new
                        {
                            Id = 26,
                            AmountOfTickets = 1354,
                            Date = new DateTime(2022, 8, 3, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 26 ",
                            Latitude = 53.90183013m,
                            Longitude = 27.57041787m,
                            Place = "Беларусь, Минск, место 26",
                            HeadLiner = "Headliner - 26 "
                        },
                        new
                        {
                            Id = 27,
                            AmountOfTickets = 1593,
                            Date = new DateTime(2022, 8, 14, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 27 ",
                            Latitude = 53.90121721m,
                            Longitude = 27.57280758m,
                            Place = "Беларусь, Минск, место 27",
                            HeadLiner = "Headliner - 27 "
                        },
                        new
                        {
                            Id = 28,
                            AmountOfTickets = 852,
                            Date = new DateTime(2022, 8, 29, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 28 ",
                            Latitude = 53.90034562m,
                            Longitude = 27.57170225m,
                            Place = "Беларусь, Минск, место 28",
                            HeadLiner = "Headliner - 28 "
                        },
                        new
                        {
                            Id = 29,
                            AmountOfTickets = 1180,
                            Date = new DateTime(2022, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 29 ",
                            Latitude = 53.90201439m,
                            Longitude = 27.5728302m,
                            Place = "Беларусь, Минск, место 29",
                            HeadLiner = "Headliner - 29 "
                        },
                        new
                        {
                            Id = 30,
                            AmountOfTickets = 790,
                            Date = new DateTime(2022, 10, 29, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 30 ",
                            Latitude = 53.90023471m,
                            Longitude = 27.57283559m,
                            Place = "Беларусь, Минск, место 30",
                            HeadLiner = "Headliner - 30 "
                        },
                        new
                        {
                            Id = 31,
                            AmountOfTickets = 1359,
                            Date = new DateTime(2022, 11, 21, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 31 ",
                            Latitude = 53.90160242m,
                            Longitude = 27.57129287m,
                            Place = "Беларусь, Минск, место 31",
                            HeadLiner = "Headliner - 31 "
                        },
                        new
                        {
                            Id = 32,
                            AmountOfTickets = 371,
                            Date = new DateTime(2022, 10, 11, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 32 ",
                            Latitude = 53.90077998m,
                            Longitude = 27.57125315m,
                            Place = "Беларусь, Минск, место 32",
                            HeadLiner = "Headliner - 32 "
                        },
                        new
                        {
                            Id = 33,
                            AmountOfTickets = 1788,
                            Date = new DateTime(2022, 9, 11, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 33 ",
                            Latitude = 53.90167887m,
                            Longitude = 27.57107296m,
                            Place = "Беларусь, Минск, место 33",
                            HeadLiner = "Headliner - 33 "
                        },
                        new
                        {
                            Id = 34,
                            AmountOfTickets = 300,
                            Date = new DateTime(2022, 11, 15, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake OpenAir № 34 ",
                            Latitude = 53.9015201m,
                            Longitude = 27.57097566m,
                            Place = "Беларусь, Минск, место 34",
                            HeadLiner = "Headliner - 34 "
                        });
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.Party", b =>
                {
                    b.HasBaseType("BookingSystem.DataLayer.EntityModels.ArtEvent");

                    b.Property<int>("AgeLimitation")
                        .HasColumnType("int");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            AmountOfTickets = 1500,
                            Date = new DateTime(2022, 10, 31, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Fake TNT Party",
                            Latitude = 53.902375271214524m,
                            Longitude = 27.55158689814755m,
                            Place = "Беларусь, Минск, Революционная улица, 9А",
                            AgeLimitation = 18
                        },
                        new
                        {
                            Id = 1,
                            AmountOfTickets = 300,
                            Date = new DateTime(2022, 9, 25, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = " Fake Макс party",
                            Latitude = 53.92206511236228m,
                            Longitude = 27.59704956223782m,
                            Place = "Беларусь, Минск, проспект Независимости, 73",
                            AgeLimitation = 21
                        });
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.OrderAndArtEvent", b =>
                {
                    b.HasOne("BookingSystem.DataLayer.EntityModels.ArtEvent", "ArtEvent")
                        .WithMany("OrderAndArtEvents")
                        .HasForeignKey("ArtEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.DataLayer.EntityModels.Order", "Order")
                        .WithMany("OrderAndArtEvents")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtEvent");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.ClassicMusic", b =>
                {
                    b.HasOne("BookingSystem.DataLayer.EntityModels.ArtEvent", null)
                        .WithOne()
                        .HasForeignKey("BookingSystem.DataLayer.EntityModels.ClassicMusic", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.OpenAir", b =>
                {
                    b.HasOne("BookingSystem.DataLayer.EntityModels.ArtEvent", null)
                        .WithOne()
                        .HasForeignKey("BookingSystem.DataLayer.EntityModels.OpenAir", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.Party", b =>
                {
                    b.HasOne("BookingSystem.DataLayer.EntityModels.ArtEvent", null)
                        .WithOne()
                        .HasForeignKey("BookingSystem.DataLayer.EntityModels.Party", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.ArtEvent", b =>
                {
                    b.Navigation("OrderAndArtEvents");
                });

            modelBuilder.Entity("BookingSystem.DataLayer.EntityModels.Order", b =>
                {
                    b.Navigation("OrderAndArtEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
